@page "/locations"
@page "/locations/return"
@inject HttpClient Http
@inject NavigationManager NavManager
@inject AppStateManager AppState 

<div class="container">
    <nav class="navbar navbar-dark bg-secondary rounded mb-3">
        <span class="navbar-brand">Laod</span>
    </nav>

    <LocationFilter Options="@_options" OnOptionsChanged="@(() => HandleOptionsChanged())" />

    @if (_pagedLocations == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Kood</th>
                    <th>Nimi</th>
                    <th style="text-align: right;">Tooteid</th>
                    <th style="text-align: right;">Laos kokku</th>
                    <th style="text-align: right;">Reserv. kokku</th>
                    <th style="text-align: right;">Vabu kokku</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var location in _pagedLocations.Results)
                {
                    <tr>
                        <td style="width: 15%;">@location.LocationCode</td>
                        <td style="width: 25%;">@location.LocationName</td>
                        <td style="width: 15%; text-align: right;">@ParseSpaceInsteadOfZero(location.TotalCount)</td>
                        <td style="width: 15%; text-align: right;">@ParseSpaceInsteadOfZero(location.TotalStockQuantity)</td>
                        <td style="width: 15%; text-align: right;">@ParseSpaceInsteadOfZero(location.TotalReservedQuantity)</td>
                        <td style="width: 15%; text-align: right;">@ParseSpaceInsteadOfZero(location.TotalFreeQuantity)</td>
                        <td>
                            <div class="d-flex">
                                <button class="btn btn-info btn-sm mr-3"
                                        @onclick="@(() => HandleInventorySelected(location.LocationId))">
                                    Laoseis
                                </button>
                                <button class="btn btn-warning btn-sm" disabled>Muuda</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="d-flex justify-content-center">
            <Pager Result="@_pagedLocations" OnPageChanged="@((p) => HandleOptionsChanged(p))" />
        </div>
    }
</div>

@code {
    private PagedResult<LocationListDto> _pagedLocations;
    private LocationFilterOptions _options = new LocationFilterOptions { CurrentPage = 1, PageSize = 10 };

    protected override async Task OnInitializedAsync()
    {
        if (NavManager.Uri.ToLower().Contains("return"))
        {
            _options = AppState.LocationListOptions ?? _options;
        }

        await UpdateList();
    }

    #region helpers
    private async Task UpdateList()
    {
        var response = await Http.PostAsJsonAsync<LocationListRequest>("api/locations", new LocationListRequest(_options));
        if (response.IsSuccessStatusCode)
        {
            var dto = await response.Content.ReadFromJsonAsync <LocationListRequest.Response>();
            _pagedLocations = dto.PagedLocations;
        }
    }

    string ParseSpaceInsteadOfZero(int someInt) => someInt > 0 ? someInt.ToString() : "";
    #endregion

    #region event handlers
    private async Task HandleOptionsChanged(int pageNo = 1)
    {
        _options.CurrentPage = pageNo;
        await UpdateList();
    }

    private void HandleInventorySelected(int locationId)
    {
        AppState.LocationListOptions = _options;
        NavManager.NavigateTo($"locations/{locationId}/inventory");
    }
    #endregion
}
