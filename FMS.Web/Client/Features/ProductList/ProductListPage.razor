@page "/products"
@page "/products/return"
@inject NavigationManager NavManager
@inject IMediator Mediator
@inject AppStateManager AppState

<nav class="navbar navbar-dark bg-secondary rounded-top zindex-like-filter-drawer">
    <span class="navbar-brand">Tooted</span>
</nav>

<ProductFilter Filter="@_filter" OnSubmit="HandleFilterSubmitted">
    <button class="btn btn-primary" @onclick="AddProduct">Lisa uus toode</button>
</ProductFilter>

@if (_pagedProducts is null)
{
    <p>Loading...</p>
}
else
{
    <div class="grid my-5">
        @foreach (var product in _pagedProducts.List)
        {
            <ProductCard Product="@product" OnSelected="@(() => HandleProductSelected(product.Id))" />
        }
    </div>

    <div class="d-flex justify-content-center">
        <Pager Result="@_pagedProducts" OnPageChanged="HandlePageChanged" />
    </div>
}

@code {
    private PagedResult<ProductListItemVm>? _pagedProducts;
    private ProductFilterVm _filter = new ProductFilterVm { CurrentPage = 1, PageSize = 18 };

    protected override async Task OnInitializedAsync()
    {
        if (NavManager.Uri.ToLower().Contains("return"))
        {
            _filter = AppState.ProductListFilter ?? _filter;
        }

        await UpdateList();
    }

    private async Task UpdateList()
    {
        var response = await Mediator.Send(new GetProductsRequest(_filter));
        _pagedProducts = response.PagedProducts ?? throw new Exception("Can't load paged product list");
    }

    private async Task HandlePageChanged(int pageNo)
    {
        _filter.CurrentPage = pageNo;
        await UpdateList();
    }

    private async Task HandleFilterSubmitted(ProductFilterVm filter)
    {
        _filter = filter;
        _filter.CurrentPage = 1;
        await UpdateList();
    }

    private void HandleProductSelected(int productBaseId)
    {
        AppState.ProductListFilter = _filter;
        NavManager.NavigateTo($"products/edit/{productBaseId}");
    }

    private void AddProduct()
    {
        AppState.ProductListFilter = _filter;
        NavManager.NavigateTo("products/add");
    }
}
